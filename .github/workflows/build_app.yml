name: Build App

on:
  push:
    tags:
      - "v*.*.*"

env:
  SAFE_LINKS: ${{ secrets.SAFE_LINKS }}
  UPDATE_SERVER: ${{ secrets.UPDATE_SERVER }}
  BOT_TOKEN_NPM: ${{ secrets.BOT_PACKAGE_PERSONAL_GITHUB_TOKEN }}

jobs:
  build_windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
      - name: Chocolatey install visual studio build tools
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install visualstudio2017buildtools
      - name: Configure visual studio build tools with npm
        run: npm config set msvs_version 2017
      - name: Install node gyp
        run: npm install --global node-gyp
      - name: Config npmrc
        run: |
          Write-Output "@ticketplushq:registry=https://npm.pkg.github.com" >> '.npmrc'
          Write-Output "//npm.pkg.github.com/:_authToken=$env:BOT_TOKEN_NPM" >> '.npmrc'
      - name: Install dependencies
        run: npm install
      - name: Rebuild dependencies
        run: npm run electron:rebuild
      - name: Configure environment
        run: |
          Set-Content './.env-cmdrc' '{ "production": { "NODE_ENV": "production", "UPDATE_SERVER": "$env:UPDATE_SERVER" } }'
          Write-Output "NODE_ENV=production" >> '.env.production'
          Write-Output "SAFE_LINKS=$env:SAFE_LINKS $env:UPDATE_SERVER" >> '.env.production'
          Write-Output "UPDATE_SERVER=$env:UPDATE_SERVER" >> '.env.production'
      - name: Build application
        run: npm run make
      - name: Show installer
        run: dir ./out/make/squirrel.windows/x64/
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
              ./out/make/squirrel.windows/x64/*
          draft: true


  build_linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
      - name: Config npmrc
        run: |
          touch .npmrc
          echo @ticketplushq:registry=https://npm.pkg.github.com >> .npmrc
          echo //npm.pkg.github.com/:_authToken=$BOT_TOKEN_NPM >> .npmrc
      - name: Install dependencies
        run: npm install
      - name: Rebuild dependencies
        run: npm run electron:rebuild
      - name: Configure environment
        run: |
          touch .env-cmdrc
          echo {\"production\": {\"NODE_ENV\": \"production\", \"UPDATE_SERVER\": \"$UPDATE_SERVER\" } } >> .env-cmdrc
          touch .env.production
          echo NODE_ENV=production >> .env.production
          echo SAFE_LINKS=$SAFE_LINKS $UPDATE_SERVER >> .env.production
          echo UPDATE_SERVER=$UPDATE_SERVER >> .env.production
      - name: Build application
        run: npm run make
      - name: Show installer
        run: ls ./out/make/deb/x64/
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
              ./out/make/deb/x64/*
          draft: true




